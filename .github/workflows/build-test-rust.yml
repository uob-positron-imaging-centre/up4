name: Build and test Rust
# TODO test this works using act
on:
  pull_request:
    paths:
      - up4/src
      - examples/**
      - .github/workflows/build-test-rust.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup override set stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        working-directory: examples
        run: cargo check

  features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies
        run: cargo install cargo-hack

      - name: Run cargo hack
        working-directory: up4/src
        run: cargo hack check --each-feature --no-dev-deps --features private 
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: up4/src

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup component add rustfmt clippy

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: up4

      - name: Run rustfmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run : |
          cargo clippy --all-features -- -D warnings
          cargo clippy -- -D warnings
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        working-directory: up4

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: up4

      - name: Run tests
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: cargo test