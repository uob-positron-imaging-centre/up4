# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ uPPPP ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  conda:
    name: conda
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          #- {os: macos, version: 1.12.0, channel: conda-forge, rust: stable}
          #- {os: windows, version: 1.12.0, channel: conda-forge, rust: stable}
          - {os: ubuntu, version: 1.12.0, channel: conda-forge, rust: stable}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with: {submodules: true}
      - name: Install Rust (${{matrix.rust}})
        uses: actions-rs/toolchain@v1
        with: {toolchain: '${{matrix.rust}}', profile: minimal, override: true}
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v2
        with: {auto-update-conda: false, activate-environment: testenv}
      - name: Install HDF5 (${{matrix.version}}${{matrix.mpi && '-' || ''}}${{matrix.mpi}})
        run: |
          [ "${{matrix.mpi}}" != "" ] && MPICC_PKG=${{matrix.mpi}}-mpicc
          conda install -y -c ${{matrix.channel}} 'hdf5=${{matrix.version}}=*${{matrix.mpi}}*' $MPICC_PKG
      - name: Build Rust version
        run: |
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          [ "${{runner.os}}" != "Windows" ] && export RUSTFLAGS="-C link-args=-Wl,-rpath,$CONDA_PREFIX/lib"
          cargo clean
          cargo check
      - name: Install Python requirements
        run: |
          pwd
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          export RUST_BACKTRACE=1
          [ "${{runner.os}}" != "Windows" ] && export RUSTFLAGS="-C link-args=-Wl,-rpath,$CONDA_PREFIX/lib"
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
      - name: Install up4 on python
        run: |
          python3 -m pip install .
      - name: Run tests
        run:
          pytest tests/test_all.py
