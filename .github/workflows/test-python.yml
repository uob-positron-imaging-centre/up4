name: Python Tests
# TODO test this works using act

on:
  pull_request:
    # unit tests not needed for docs
    paths-ignore:
      - docs/**
    paths:
      - up4/**
      - tests/**
      - .github/workflows/test-python.yml
  
  push:
    # unit tests not needed for docs
    paths-ignore:
      - docs/**
    paths:
      - up4/**
      - tests/**
      - .github/workflows/test-python.yml
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: up4/tests
    shell: bash -l {0}

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.11"]
        channel: [conda-forge]
        mpi: [nompi]
        hdf5_version: [1.12]
      
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python and Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "${{ matrix.python-version }}"
          channels: "conda-forge,anaconda"
          activate-environment: testenv

      - name: Install mamba
        run: |
            # hdf5 version 1.14 not currently supported yet so we restrict hdf5 to 1.13 at most
            echo "hdf5<=1.13" > $CONDA_PREFIX/conda-meta/pinned
            conda install -y -c ${{matrix.channel}} mamba

      - name: Install HDF5 (${{matrix.hdf5_version}}${{matrix.mpi && '-' || ''}}${{matrix.mpi}})
        run: |
            [ "${{matrix.mpi}}" != "" ] && MPICC_PKG=${{matrix.mpi}}-mpicc
            mamba install -y -c ${{matrix.channel}} 'hdf5=${{matrix.hdf5_version}}=*${{matrix.mpi}}*' $MPICC_PKG

      - name: Install dependencies
        run: |
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          which python
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools
          export RUSTFLAGS="-C link-args=-Wl,-rpath,$CONDA_PREFIX/lib"
          mamba install --file requirements.txt --file requiements_test.txt
          
      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: up4

      - name: Install Up4
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: |
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          python3 -m pip install .
          python3 -c "import up4"
          python3 -c "import upppp_rust; print(upppp_rust.__file__)"

      - name: Run tests and report coverage
        run: |
          export LD_LIBRARY_PATH="$CONDA_PREFIX/lib"
          python3 -c "import up4; print(up4.__file__)"
          python3 -m pytest --cov tests/test_all.py

      # - name: Run doctests
      #   run: python tests/docs/run_doctest.py

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.11']
        channel: [conda-forge]
        mpi: [nompi]
        hdf5_version: [1.12]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python and Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "${{ matrix.python-version }}"
          channels: "conda-forge,anaconda"
          activate-environment: testenv

      - name: Install mamba
        run: |
            # hdf5 version 1.14 not currently supported yet so we restrict hdf5 to 1.13 at most
            echo "hdf5<=1.13" > $CONDA_PREFIX/conda-meta/pinned
            conda install -y -c ${{matrix.channel}} mamba

      - name: Install HDF5 (${{matrix.hdf5_version}}${{matrix.mpi && '-' || ''}}${{matrix.mpi}})
        run: |
            [ "${{matrix.mpi}}" != "" ] && MPICC_PKG=${{matrix.mpi}}-mpicc
            mamba install -y -c ${{matrix.channel}} 'hdf5=${{matrix.hdf5_version}}=*${{matrix.mpi}}*' $MPICC_PKG

      - name: Install dependencies
        run: |
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          which python
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools
          export RUSTFLAGS="-C link-args=-Wl,-rpath,$CONDA_PREFIX/lib"
          mamba install --file requirements.txt --file requiements_test.txt

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: py-polars

      - name: Install Up4
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: |
          export HDF5_DIR="$CONDA_PREFIX"
          export PYO3_PYTHON=python3
          python3 -m pip install .
          python3 -c "import up4"
          python3 -c "import upppp_rust; print(upppp_rust.__file__)"

      - name: Run tests and report coverage
        run: |
          export LD_LIBRARY_PATH="$CONDA_PREFIX/lib"
          python3 -c "import up4; print(up4.__file__)"
          python3 -m pytest --cov tests/test_all.py

