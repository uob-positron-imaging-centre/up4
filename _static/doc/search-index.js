var searchIndex = new Map(JSON.parse('[\
["upppp_rust",{"doc":"The <code>upppp</code> crate provides an tool for post processing â€¦","t":"QCCCCCCQQCQCCFKMNNNNNNNNNNNNNNNNNNFPPGFNNNNNNNNNNNNNNNNHHCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHKFKEEFNNNNNNNNNNNNNNNNNNNNNNNNMMMMMNNNNNNNNNNCNNNNMMMMCNNNNNNNNNNNNNNNNNNNNFNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEGFKPPPENNMMMMNNNNCMMNNNNNMMMMCNNNNNMMMNNNNNNMMMMMMMMNNMNNMNNMNMMNMMMMNNNNNNNNNNNNCNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKMNNNNNNNNNNNNMNNMNOMNNNNNNNHCCCCCCCCFNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCFNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNIIIIICHHHHHHH","n":["check_signals","comparison","converter","datamanager","grid","particleselector","plotting","print_debug","print_warning","pylib","setup_bar","types","utilities","Comparer","Comparison","align","align","borrow","borrow_mut","compare","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","LegacyVTKConverter","PolyData","UnstructuredGrid","VTKType","XMLVTKConverter","add_diameter_field","add_diameter_field","add_id_field","add_id_field","add_radius_field","add_radius_field","add_type_field","add_type_field","add_velocity_field","add_velocity_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","csv_converter","csv_multi_converter","csv_multi_file_time_step","csv_multi_file_time_step","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","is_in_subset","is_in_subset","is_in_subset","new","new","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_hdf5_from_files","write_hdf5_from_files","write_hdf5_from_folder","write_hdf5_from_folder","csv_multi_file_time_step","DataManager","GlobalStats","Manager","PData","TData","Timestep","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clouds","default","default","density","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","fmt","fmt","from","from","from_subset","from_subset","get_timestep","get_timestep_buffer","get_timestep_unbuffered","global_stats","info","init","init","into","into","is_in_subset","is_in_subset","max_time","min_time","nparticles","particleid","pdata","position","ptype","radius","sample_rate","set_rotation_angle","set_rotation_anker","setup_buffer","stats","tdata","time","time_array","timestep_at_seconds_closest","timesteps","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","velocity","velocity","velocity_mag","vzip","vzip","PData","borrow","borrow_mut","buffersize","buffersize_extra","deref","deref_mut","drop","drop","from","from_subset","get_timestep","get_timestep_buffer","get_timestep_unbuffered","global_stats","info","init","into","is_in_subset","new","reset_buffer","set_rotation_angle","set_rotation_anker","setup_buffer","stats","test","to_subset","to_subset_unchecked","try_from","try_into","type_id","update","update_extra","vzip","TData","arguments","borrow","borrow_mut","buffersize","buffersize_extra","deref","deref_mut","doc","drop","drop","extract","extract","from","from_subset","get_timestep","get_timestep_buffer","get_timestep_unbuffered","global_stats","info","init","into","into_py","is_in_subset","items_iter","lazy_type_object","new","set_rotation_angle","set_rotation_anker","setup_buffer","stats","test","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_object_raw","update","update_extra","vzip","CartesianGrid3D","CylindricalGrid3D","Dim","Grid","GridFunctions3D","OneD","ThreeD","TwoD","VectorGrid","__clone_box","__clone_box","add_to_cell","add_trajectory_value","add_value","as_any","borrow","borrow","borrow_mut","borrow_mut","cartesian_grid","cell_id","cell_ids_in_trajectory","cells","clone","clone","clone_into","clone_into","collapse","collapse_two","collapse_two_weight","collapse_weight","cylindrical_grid","data","deref","deref","deref_mut","deref_mut","divide_by_array","divide_by_scalar","divide_by_weight","drop","drop","from","from","from_subset","from_subset","get_cells","get_data","get_limits","get_value","get_weights","get_xpositions","get_ypositions","get_zpositions","init","init","insert","into","into","is_cylindrical","is_in_subset","is_in_subset","is_inside","limits","new_zeros","outlier_removal","positions","set_data","set_weights","slice","slice_idx","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vector_grid","vzip","vzip","CartesianGrid3D","__clone_box","add_to_cell","add_trajectory_value","add_value","as_any","borrow","borrow_mut","cell_id","cell_ids_in_trajectory","cells","clone","clone_into","collapse","collapse_two","collapse_two_weight","collapse_weight","data","deref","deref_mut","divide_by_array","divide_by_scalar","divide_by_weight","drop","fmt","fmt","from","from_subset","get_cells","get_data","get_limits","get_value","get_weights","get_xpositions","get_ypositions","get_zpositions","index","init","insert","into","is_cylindrical","is_in_subset","is_inside","limits","new","new_zeros","outlier_removal","set_data","set_weights","slice","slice_idx","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","weight","xpositions","ypositions","zpositions","CylindricalGrid3D","__clone_box","add_to_cell","add_trajectory_value","add_value","as_any","borrow","borrow_mut","cell_id","cell_ids_in_trajectory","cells","center","clone","clone_into","collapse","collapse_two","collapse_two_weight","collapse_weight","data","default","deref","deref_mut","divide_by_array","divide_by_scalar","divide_by_weight","drop","fmt","fmt","from","from_subset","get_cells","get_data","get_limits","get_value","get_weights","get_xpositions","get_ypositions","get_zpositions","index","init","insert","into","is_cylindrical","is_in_subset","is_inside","limits","new","new_zeros","opositions","outlier_removal","radius","rmeanpositions","rpositions","set_data","set_weights","slice","slice_idx","to_cylindrical","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","weight","zpositions","VectorGrid","__clone_box","add_to_cell","add_trajectory_value","add_value","as_any","borrow","borrow_mut","cell_id","cell_ids_in_trajectory","clone","clone_into","collapse","collapse_two","collapse_two_weight","collapse_weight","cyl_grid","data","data","deref","deref_mut","divide_by_array","divide_by_scalar","divide_by_weight","drop","fmt","fmt","from","from_subset","get_cells","get_data","get_limits","get_value","get_weights","get_xpositions","get_ypositions","get_zpositions","init","insert","into","is_cylindrical","is_in_subset","is_inside","new","new_zeros","outlier_removal","set_data","set_weights","slice","slice_idx","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","velocity_calculation","vzip","ParticleSelector","Selector","as_any","as_any","borrow","borrow_mut","default","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","is_valid","is_valid","new","set_time","set_time","time","timestep_valid","timestep_valid","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","plot","plotting_2d","parity_contour","parity_map","parity_plot","quiver","scalar_contour","scalar_map","unit_vector","ParityContour","borrow","borrow_mut","create_parity_contour","delta_as_absolute_difference","delta_as_difference","delta_as_percent","deref","deref_mut","drop","from","from_grids_depth_averaged","from_grids_single_plane","from_subset","from_vector_grids_depth_averaged","from_vector_grids_single_plane","init","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ParityMap","borrow","borrow_mut","create_parity_map","delta_as_absolute_difference","delta_as_difference","delta_as_percent","deref","deref_mut","drop","from","from_grids_depth_averaged","from_grids_single_plane","from_subset","from_vector_grids_depth_averaged","from_vector_grids_single_plane","init","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ParityPlot","borrow","borrow_mut","create_parity_scatter","deref","deref_mut","drop","from","from_grids","from_grids_depth_averaged","from_grids_single_plane","from_subset","from_vector_grids","from_vector_grids_depth_averaged","from_vector_grids_single_plane","init","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","QuiverPlot","__clone_box","borrow","borrow_mut","bound_full_node","bound_half_node","bound_max","bound_min","bound_min_max","clone","clone_into","create_quiver_traces","deref","deref_mut","drop","fmt","from","from_subset","from_vector_grid_depth_averaged","from_vector_grid_single_plane","init","into","is_in_subset","new","norm","scale_elementwise","scale_global","to_owned","to_subset","to_subset_unchecked","true_norm","try_from","try_into","type_id","u","v","vzip","x","y","ScalarContour","borrow","borrow_mut","create_scalar_contour","deref","deref_mut","drop","from","from_grid_depth_averaged","from_grid_single_plane","from_subset","from_vector_grid_depth_averaged","from_vector_grid_single_plane","init","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ScalarMap","__clone_box","borrow","borrow_mut","clone","clone_into","create_scalar_map","data","deref","deref_mut","drop","from","from_grid_depth_averaged","from_grid_single_plane","from_subset","from_vector_grid_depth_averaged","from_vector_grid_single_plane","init","into","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","x","y","UnitVectorPlot","__clone_box","borrow","borrow_mut","bound_full_node","bound_half_node","bound_max","bound_min","bound_min_max","clone","clone_into","create_quiver_traces","deref","deref_mut","drop","from","from_subset","from_vector_grid_depth_averaged","from_vector_grid_single_plane","init","into","is_in_subset","norm","scale_elementwise","scale_global","to_owned","to_subset","to_subset_unchecked","true_norm","try_from","try_into","type_id","u","v","vzip","x","y","libcomp","libconv","libgrid","libplot","PyConverter","arguments","borrow","borrow_mut","deref","deref_mut","doc","drop","extract","extract","from","from_subset","init","into","into_py","is_in_subset","items_iter","lazy_type_object","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_object_raw","vzip","PyGrid","PyVecGrid","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","doc","doc","drop","drop","extract","extract","extract","extract","from","from","from_subset","from_subset","grid","grid","init","init","into","into","into_py","into_py","is_in_subset","is_in_subset","items_iter","items_iter","lazy_type_object","lazy_type_object","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","type_object_raw","type_object_raw","vzip","vzip","PyPlotter2D","borrow","borrow_mut","deref","deref_mut","doc","drop","extract","extract","from","from_subset","init","into","into_py","is_in_subset","items_iter","lazy_type_object","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_object_raw","vzip","CellId","OneD","Position","ThreeD","TwoD","maths","nan_mean","nan_std","flatten_2d","flatten_3d","meshgrid","meshgrid3d","minmax"],"q":[[0,"upppp_rust"],[13,"upppp_rust::comparison"],[34,"upppp_rust::converter"],[110,"upppp_rust::converter::csv_multi_file_time_step"],[111,"upppp_rust::datamanager"],[186,"upppp_rust::datamanager::pdata"],[220,"upppp_rust::datamanager::tdata"],[261,"upppp_rust::grid"],[347,"upppp_rust::grid::cartesian_grid"],[410,"upppp_rust::grid::cylindrical_grid"],[478,"upppp_rust::grid::vector_grid"],[537,"upppp_rust::particleselector"],[566,"upppp_rust::plotting"],[568,"upppp_rust::plotting::plotting_2d"],[575,"upppp_rust::plotting::plotting_2d::parity_contour"],[600,"upppp_rust::plotting::plotting_2d::parity_map"],[625,"upppp_rust::plotting::plotting_2d::parity_plot"],[649,"upppp_rust::plotting::plotting_2d::quiver"],[688,"upppp_rust::plotting::plotting_2d::scalar_contour"],[710,"upppp_rust::plotting::plotting_2d::scalar_map"],[739,"upppp_rust::plotting::plotting_2d::unit_vector"],[776,"upppp_rust::pylib"],[780,"upppp_rust::pylib::libconv"],[805,"upppp_rust::pylib::libgrid"],[855,"upppp_rust::pylib::libplot"],[879,"upppp_rust::types"],[884,"upppp_rust::utilities"],[887,"upppp_rust::utilities::maths"],[892,"alloc::boxed"],[893,"core::option"],[894,"core::result"],[895,"core::any"],[896,"alloc::vec"],[897,"dyn_clone::sealed"],[898,"ndarray::aliases"],[899,"ndarray::aliases"],[900,"core::fmt"],[901,"pyo3::marker"],[902,"pyo3::types::any"],[903,"pyo3::instance"],[904,"core::ffi::c_str"],[905,"pyo3::err"],[906,"pyo3::instance"],[907,"pyo3::impl_::pyclass::lazy_type_object"],[908,"pyo3_ffi::cpython::object"],[909,"core::any"],[910,"core::clone"],[911,"ndarray::aliases"],[912,"plotly::layout"],[913,"plotly::plot"],[914,"plotly::traces::scatter"],[915,"colorous::gradient"],[916,"plotly::traces::contour"]],"d":["Check kill- signals set by ctrl-c in the command line","","This file provides functionalities to convert data to HDF5 â€¦","Data Managment Module. Organizes file access.","Grids implement ndarrays which hold data. This grid â€¦","Module that implements the <code>ParticleSelector</code>, a struct â€¦","Module that handles plotting of particle data.","Generate detailed output if compiled with â€¦","Generate detailed Warnings if compiled with â€¦","Create Python bindings for crate.","","","Provide utilities for the rest of the crate, such as â€¦","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Converter for modern, ascii-based vtk files","","","","Converter for modern, xml-based vtk files","","","","","","","","","","","","","","","","","Convert a single trajectory csv file to Hdf5","Read in A CSV file containing multiple particles and â€¦","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Convert modern, xml-based vtk files into a HDF5 file","Convert legacy vtk files into a HDF5 file","Convert a folder with modern, xml-based vtk files into a â€¦","Convert a folder with legacy vtk files into a HDF5 file","","Defines main access functions for post processing â€¦","Data-struct containing overall stats for a dataset. (e.g â€¦","","","","Data-struct containing all necessery information for a â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","return the pointer to <code>Timestep</code> at the step <code>timestep</code>","read from other buffer then the main one","return a timetsep that is not in the buffer","Return <code>GlobalStats</code> for global system information","Return a string containung information about the dataset","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Particle based HDF5 dataset manager","","","","","set rotation angle","set rotation anker, the point around which the rotation is â€¦","setup a new buffer","Development function","Timestep based HDF5 dataset manager","","","Returns the timestep at this time in the dataset","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","read from other buffer then the main one","","","","","Calls <code>U::from(self)</code>.","","new conste","","","","setup a new buffer","","","","","","","","","Update   of the extra buffers","","","","","","","","","","","","","","","Returns the argument unchanged.","","","read from other buffer then the main one","","","","","Calls <code>U::from(self)</code>.","","","","","","","","setup a new buffer","","","","","","","","","","","","","","Provides a generic way to send ranges to nD-Grid struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Take traces and plot them","Submodule for handling 2D plots.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","This file provides coupling of functions to convert data â€¦","","Submodule for export of plotting code to Python.","Convert particle data from a given format to HDF5 â€¦","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A class containing all information for a 3D grid wrapping â€¦","A 3D Grid containing Vector Data This grid is generated in â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Module of common maths functions exposed to users","","","Flattens a 2D array into a 1D array.","Flattens a 3D array into a 1D array.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,18,18,0,0,12,14,12,14,12,14,12,14,12,14,12,18,14,12,18,14,0,0,0,0,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,18,14,12,14,12,14,0,0,0,0,0,0,0,20,20,22,20,22,20,20,20,20,22,20,20,22,20,22,22,20,22,20,22,20,22,20,22,26,26,26,26,26,20,22,20,22,20,22,22,22,22,20,0,20,20,20,22,26,26,26,26,0,20,22,22,22,20,20,22,20,22,20,22,20,22,20,22,20,22,22,20,22,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,46,46,46,0,46,45,6,6,6,6,46,45,46,45,0,6,6,45,46,45,46,45,6,6,6,6,0,45,46,45,46,45,6,6,6,46,45,46,45,46,45,6,6,6,6,6,6,6,6,46,45,6,46,45,6,46,45,6,45,6,6,45,6,6,6,6,46,45,46,45,46,45,46,45,46,45,46,45,0,46,45,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,53,54,54,54,54,54,54,54,54,54,54,54,54,53,54,54,53,54,54,53,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,70,71,70,71,70,71,70,71,70,71,70,71,70,70,71,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````{bd}{fd}{ce{}{}}0{{b{j{h}}{j{h}}{j{l}}}f}{nc{}}0{nd}{cc{}}4{{}n}5{cA`{}}{c{{Ab{e}}}{}{}}7{c{{Ad{e}}}{}{}}0{cAf{}}9`````{{AhAj}Ah}{{AlAj}Al}10101010;;;;;;{{AjAj{B`{An}}AjA`AjA`A`Bbn}d}{{AjAj{B`{An}}AjA`AjA`A`BbAj}d}`{{{B`{Aj}}Aj{B`{An}}{B`{Bb}}AjA`AjA`A`Bb}d}{{}Ah}{{}Bd}{{}Al}??????>>>==={ce{}{}}00===000<<<{BdAh}2<<<111;;;;;;:::111{{Ah{B`{Aj}}BbAjAj}d}{{Al{B`{Aj}}BbAjAj}d}{{AhAjBbAjAj}d}{{AlAjBbAjAj}d}9``````{{cBf}d{}}6666{BhBh}{{ce}d{}{}}{Bh{{Bj{Bb}}}}{{}Bh}{{}Bl}2{nc{}}000{Bl{{Bn{Bb}}}}{nd}0{{BhC`}Cb}{{BlC`}Cb}{cc{}}0{ce{}{}}0{{Cdn}Bh}{{Cdnn}Bh}1{CdBl}{Cd{{Ad{CfAj}}}}{{}n}055{cA`{}}0{BlBb}0{Bln}{Bh{{Bj{Bb}}}}`{Bh{{Bj{Ch}}}}113{{CdBbBb}d}{{Cd{Cj{Bb}}}d}{{Cdn}d}{Cdd}`{BhBb}{Bl{{Bj{Bb}}}}{{BlBb}{{Ad{nAj}}}}9{ce{}{}}{c{{Ab{e}}}{}{}}011{c{{Ad{e}}}{}{}}000{cAf{}}0{Bh{{Bn{Bb}}}}{Bl{{Bn{Bb}}}}755`55``{nc{}}0{nd}{Cld}{cc{}}9{{Cln}Bh}{{Clnn}Bh}1{ClBl}{Cl{{Ad{CfAj}}}}{{}n}>{cA`{}}{AjCl}{{}d}{{ClBbBb}d}{{Cl{Cj{Bb}}}d}{{Cln}d}<<{c{{Ab{e}}}{}{}}{ce{}{}}{c{{Ad{e}}}{}{}}0{cAf{}}{{Cl{Cn{nn}}}d}{{Cl{Cn{nn}}n}d}4`{{cD`}{{Dd{Db}}}{}}55``{nc{}}0{D`{{Dh{Df}}}}{Djd}{nd}{{Dbc}{{Dh{Dj}}}{}}0{cc{}};{{Djn}Bh}{{Djnn}Bh}1{DjBl}{Dj{{Ad{CfAj}}}}{{}n}{ce{}{}}{{DjD`}Dl}{cA`{}}{{}Dn}{{}{{E`{Dj}}}}{AjDj}{{DjBbBb}d}{{Dj{Cj{Bb}}}d}{{Djn}d}{Djd}0{c{{Ab{e}}}{}{}}:{c{{Ad{e}}}{}{}}0{cAf{}}{D`Eb}{{Dj{Cn{nn}}}d}{{Dj{Cn{nn}}n}d}?`````````{{cBf}d{}}0{{lEdBb}d}{{lChChBb}d}{{lChBb}d}{lEf}{ce{}{}}000`{{lCh}{{Eh{Ed}}}}{{lChCh}{{Eh{{Cn{{B`{Ed}}{B`{Bb}}}}}}}}{{{Ej{c}}}{{Bj{n}}}{}}{ElEl}{{{Ej{c}}}{{Ej{c}}}En}{{ce}d{}{}}0{{ln}{{Bn{Bb}}}}{{lnn}{{Bj{Bb}}}}01`{{{Ej{c}}}{{F`{c}}}{}}{nc{}}000{{l{F`{Bb}}}d}{{lBb}d}{ld}{nd}0{cc{}}0??{lEd}{l{{F`{Bb}}}}{l{{Cj{{Cj{Bb}}}}}}{{lCh}Bb}2{l{{Bj{Bb}}}}00{{}n}0{{lChBb}d}{ce{}{}}0{lA`}{cA`{}}0{{lCh}A`}{{{Ej{c}}}El{}}{l{{j{l}}}}{{lBbn}d}{{{Ej{c}}}{{F`{Bb}}}{}}{{l{F`{Bb}}}d}0{{lnBb}{{Bn{Bb}}}}{{lnn}{{Bn{Bb}}}}::{c{{Ab{e}}}{}{}}0;;{c{{Ad{e}}}{}{}}000{cAf{}}0`==`{{cBf}d{}}{{FbEdBb}d}{{FbChChBb}d}{{FbChBb}d}{FbEf}{ce{}{}}0{{FbCh}{{Eh{Ed}}}}{{FbChCh}{{Eh{{Cn{{B`{Ed}}{B`{Bb}}}}}}}}{FbEd}{FbFb}{{ce}d{}{}}{{Fbn}{{Bn{Bb}}}}{{Fbnn}{{Bj{Bb}}}}01{Fb{{F`{Bb}}}}{nc{}}0{{Fb{F`{Bb}}}d}{{FbBb}d}{Fbd}{nd}{{FbC`}Cb}0{cc{}}?<7{FbFd}{{FbCh}Bb}9{Fb{{Bj{Bb}}}}00{{FbEd}c{}}{{}n}{{FbChBb}d}{ce{}{}}{FbA`}{cA`{}}{{FbCh}A`}9{{{Cj{n}}El}Fb}{Fb{{j{l}}}}{{FbBbn}d}{{Fb{F`{Bb}}}d}0{{FbnBb}{{Bn{Bb}}}}{{Fbnn}{{Bn{Bb}}}}9{cCf{}}{c{{Ab{e}}}{}{}};{c{{Ad{e}}}{}{}}0{cAf{}}={Fb{{F`{Bb}}}}{Fb{{Bj{Bb}}}}00`{{cBf}d{}}{{FfEdBb}d}{{FfChChBb}d}{{FfChBb}d}{FfEf}{ce{}{}}0{{FfCh}{{Eh{Ed}}}}{{FfChCh}{{Eh{{Cn{{B`{Ed}}{B`{Bb}}}}}}}}{FfEd}{Ff{{Cj{Bb}}}}{FfFf}{{ce}d{}{}}{{Ffn}{{Bn{Bb}}}}{{Ffnn}{{Bj{Bb}}}}01{Ff{{F`{Bb}}}}{{}Ff}{nc{}}0{{Ff{F`{Bb}}}d}{{FfBb}d}{Ffd}{nd}{{FfC`}Cb}0{cc{}}{ce{}{}}?9{FfFd}{{FfCh}Bb};{Ff{{Bj{Bb}}}}00{{FfEd}c{}}{{}n}{{FfChBb}d}6{FfA`}{cA`{}}{{FfCh}A`}8{{{Cj{n}}ElAj}Ff}{Ff{{j{l}}}}8{{FfBbn}d}{FfBb}:{Ff{{Bj{{Cj{Bb}}}}}}{{Ff{F`{Bb}}}d}0{{FfnBb}{{Bn{Bb}}}}{{Ffnn}{{Bn{Bb}}}}{{FfCh}Ch}{ce{}{}}{cCf{}}{c{{Ab{e}}}{}{}}2{c{{Ad{e}}}{}{}}0{cAf{}}4{Ff{{F`{Bb}}}}{Ff{{Bj{Bb}}}}`{{cBf}d{}}{{FhEdBb}d}{{FhChChBb}d}{{FhChBb}d}{FhEf};;{{FhCh}{{Eh{Ed}}}}{{FhChCh}{{Eh{{Cn{{B`{Ed}}{B`{Bb}}}}}}}}{FhFh}{{ce}d{}{}}{{Fhn}{{Bn{Bb}}}}{{Fhnn}{{Bj{Bb}}}}01{FhFf}{Fh{{Cj{{j{l}}}}}}`{nc{}}0{{Fh{F`{Bb}}}d}{{FhBb}d}{Fhd}{nd}{{FhC`}Cb}0{cc{}}{ce{}{}}{FhEd}{Fh{{F`{Bb}}}}{Fh{{Cj{{Cj{Bb}}}}}}{{FhCh}Bb}2{Fh{{Bj{Bb}}}}00{{}n}{{FhChBb}d}7{FhA`}{cA`{}}{{FhCh}A`}{{{j{l}}}Fh}{Fh{{j{l}}}}{{FhBbn}d}{{Fh{F`{Bb}}}d}0{{FhnBb}{{Bn{Bb}}}}{{Fhnn}{{Bn{Bb}}}}{ce{}{}}{cCf{}}{c{{Ab{e}}}{}{}}2{c{{Ad{e}}}{}{}}0{cAf{}}{{FhCh{Bj{Bb}}}{{Cj{Bb}}}}5``{FjEf}{FlEf}77{{}Fl}{nc{}}0{nd}{cc{}};{{}n}<{cA`{}}{{FjBbBbBbn}A`}{{FlBbBbBbn}A`}{{{Cn{BbBb}}{B`{Bb}}{B`{Bb}}{B`{Bb}}{B`{n}}}Fl}{{FjBbBb}d}{{FlBbBb}d}`{{FjBb}A`}{{FlBb}A`}{c{{Ab{e}}}{}{}}{ce{}{}}{c{{Ad{e}}}{}{}}0{cAf{}}2{{{B`{{j{Fn}}}}G`}Gb}`````````33{Gd{{B`{{j{{Gf{BbBbBb}}}}}}}}{GdGd}00{nc{}}0{nd}{cc{}}{{{j{l}}{j{l}}n}Gd}{{{j{l}}{j{l}}nn}Gd}:{{FhFhn}Gd}{{FhFhnn}Gd}{{}n}={cA`{}}?>==<>`>>{Gh{{B`{{j{{Gf{BbBbBb}}}}}}}}{GhGh}00::98{{{j{l}}{j{l}}n}Gh}{{{j{l}}{j{l}}nn}Gh}{ce{}{}}{{FhFhn}Gh}{{FhFhnn}Gh}827{c{{Ab{e}}}{}{}}3{c{{Ad{e}}}{}{}}0{cAf{}}5`55{Gj{{B`{{j{{Gl{BbBb}}}}}}}}{nc{}}0{nd}{cc{}}{{{j{l}}{j{l}}}Gj}{{{j{l}}{j{l}}n}Gj}{{{j{l}}{j{l}}nn}Gj}<{{FhFh}Gj}{{FhFhn}Gj}{{FhFhnn}Gj}{{}n}{ce{}{}}{cA`{}}?1>>=1`{{cBf}d{}}22{{GnBbBb}Gn}0{{GnBb}Gn}01{GnGn}{{ce}d{}{}}{{GnBb{Ab{H`}}}{{B`{{j{Fn}}}}}}{nc{}}0{nd}{{GnC`}Cb}{cc{}};{{Fhn}Gn}{{Fhnn}Gn}>=<{{{Bj{Bb}}{Bj{Bb}}{Bn{Bb}}{Bn{Bb}}{Bn{Bb}}{Bn{Bb}}}Gn}{Gn{{Bn{Bb}}}}{{Gn{Bn{Bb}}}Gn}<{ce{}{}}{c{{Ab{e}}}{}{}}13{c{{Ad{e}}}{}{}}0{cAf{}}553{Gn{{Bj{Bb}}}}0`44{{Hb{Ab{H`}}}{{B`{{j{{Hd{{B`{Bb}}}}}}}}}}>>=;{{{j{l}}n}Hb}{{{j{l}}nn}Hb}7{{Fhn}Hb}{{Fhnn}Hb}{{}n}:{cA`{}}:;998;`{{cBf}d{}}<<{HfHf}{{ce}d{}{}}{{Hf{Ab{H`}}}{{B`{{j{{Gf{BbBbBb}}}}}}}}{Hf{{Bn{Bb}}}}{nc{}}0{nd}{cc{}}{{{j{l}}n}Hf}{{{j{l}}nn}Hf}{ce{}{}}{{Fhn}Hf}{{Fhnn}Hf}>2=2{c{{Ab{e}}}{}{}}3{c{{Ad{e}}}{}{}}0{cAf{}}5{Hf{{Bj{Bb}}}}0`{{cBf}d{}}77{{HhBbBb}Hh}0{{HhBb}Hh}01{HhHh}{{ce}d{}{}}{{HhBb{Ab{H`}}}{{B`{{j{Fn}}}}}}{nc{}}0{nd}{cc{}}?{{Fhn}Hh}{{Fhnn}Hh}{{}n}{ce{}{}}{cA`{}}{Hh{{Bn{Bb}}}}{{Hh{Bn{Bb}}}Hh}=3{c{{Ab{e}}}{}{}}42{c{{Ad{e}}}{}{}}0{cAf{}}446{Hh{{Bj{Bb}}}}0`````{{cD`}{{Dd{Db}}}{}}88>>{D`{{Dh{Df}}}}>{{Dbc}{{Dh{Hj}}}{}}0>:;:{{HjD`}Dl}:{{}Dn}{{}{{E`{Hj}}}}9=887{D`Eb}>``>>>>{nc{}}00066{nd}0{{Dbc}{{Dh{Hl}}}{}}0{{Dbc}{{Dh{Hn}}}{}}0{cc{}}0{ce{}{}}0``{{}n}011{{HlD`}Dl}{{HnD`}Dl}{cA`{}}0<<{{}{{E`{Hl}}}}{{}{{E`{Hn}}}}{c{{Ab{e}}}{}{}}077{c{{Ad{e}}}{}{}}000{cAf{}}0??99`99>>{D`{{Dh{Df}}}}>{{Dbc}{{Dh{I`}}}{}}0<;:;{{I`D`}Dl}8{{}Dn}{{}{{E`{I`}}}}7>665{D`Eb}?``````{{{F`{Bb}}}Bb}0{{{Bn{Bb}}}{{Bj{Bb}}}}{{{F`{Bb}}}{{Bj{Bb}}}}{{{Bj{Bb}}{Bj{Bb}}}{{Cn{{Bn{Bb}}{Bn{Bb}}}}}}{{{Bj{Bb}}{Bj{Bb}}{Bj{Bb}}}{{Cn{{F`{Bb}}{F`{Bb}}{F`{Bb}}}}}}{{{Bj{Bb}}}{{Cn{BbBb}}}}","c":[],"p":[[10,"Comparison",13],[1,"unit"],[5,"Comparer",13],[10,"Manager",111],[5,"Box",892],[10,"GridFunctions3D",261],[1,"usize"],[1,"bool"],[6,"Option",893],[6,"Result",894],[5,"TypeId",895],[5,"XMLVTKConverter",34],[1,"str"],[5,"LegacyVTKConverter",34],[1,"i64"],[5,"Vec",896],[1,"f64"],[6,"VTKType",34],[5,"Private",897],[5,"Timestep",111],[8,"Array1",898],[5,"GlobalStats",111],[8,"Array2",898],[5,"Formatter",899],[8,"Result",899],[10,"DataManager",111],[5,"String",900],[8,"Position",879],[1,"array"],[5,"PData",186],[1,"tuple"],[5,"Python",901],[5,"PyAny",902],[5,"Py",903],[5,"CStr",904],[8,"PyResult",905],[5,"TData",220],[8,"PyObject",903],[5,"PyClassItemsIter",906],[5,"LazyTypeObject",907],[5,"PyTypeObject",908],[8,"CellId",879],[10,"Any",895],[8,"Result",909],[5,"Grid",261],[6,"Dim",261],[10,"Clone",910],[8,"Array3",898],[5,"CartesianGrid3D",347],[8,"ThreeD",879],[5,"CylindricalGrid3D",410],[5,"VectorGrid",478],[10,"Selector",537],[5,"ParticleSelector",537],[10,"Trace",911],[5,"Layout",912],[5,"Plot",911],[5,"ParityContour",575],[5,"HeatMap",913],[5,"ParityMap",600],[5,"ParityPlot",625],[5,"Scatter",914],[5,"QuiverPlot",649],[5,"Gradient",915],[5,"ScalarContour",688],[5,"Contour",916],[5,"ScalarMap",710],[5,"UnitVectorPlot",739],[5,"PyConverter",780],[5,"PyGrid",805],[5,"PyVecGrid",805],[5,"PyPlotter2D",855]],"b":[[231,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26TData"],[232,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26mut+TData"],[371,"impl-Display-for-CartesianGrid3D"],[372,"impl-Debug-for-CartesianGrid3D"],[436,"impl-Debug-for-CylindricalGrid3D"],[437,"impl-Display-for-CylindricalGrid3D"],[503,"impl-Debug-for-VectorGrid"],[504,"impl-Display-for-VectorGrid"],[788,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26PyConverter"],[789,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26mut+PyConverter"],[819,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26PyGrid"],[820,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26mut+PyGrid"],[821,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26mut+PyVecGrid"],[822,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26PyVecGrid"],[862,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26PyPlotter2D"],[863,"impl-PyFunctionArgument%3C\'a,+\'py%3E-for-%26mut+PyPlotter2D"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
