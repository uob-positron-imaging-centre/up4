.. converter_ref:

************************
Data Conversion Tutorial
************************

``up4`` is built on the HDF5 data format. To use ``up4`` we must first convert data to HDF5.
Up to this point there are two supported conversion functions: csv and vtk.


.. code-block:: python

    import up4
    up4.Converter.csv(
        'path/to/data.csv',     # Path to the csv file
        'output.hdf5',          # filename to write
        columns = [0,1,2,3],    # Select the columns for to read, pointing to the time, x-, y-, z-positions
        delimiter = ',',        # Delimiter used in the csv file
        header = True,          # Does the csv file have a header?
        comment = '#',          # Comment character
        vel = True,             # Do you want to calculate the velocity
        interpolate = True,     # Do you want to interpolate the data
        radius = 0.1,           # Radius of the particle
    )

It is strongly recommended to interpolate the data. ``up4`` sometimes relies on the spacing between the data points to be constant.
If the csv contains velocity information you can read it in by simply extending the columns vector from 4 to 7 elements, pointing to t, x, y, z, vx, vy, vz.


The vtk reader is developed to read legacy .vtk files generated by `LIGGGHTS <https://www.cfdem.com/liggghts-open-source-discrete-element-method-particle-simulation-code>`_ simulation software.
There are two ways to convert vtk files, either with :code:`up4.Converter.vtk`, which requires a list of filenames as input, or with :code:`up4.Converter.vtk_from_folder`
which will read all vtk files in a folder and convert them to hdf5.

The list of filenames in :code:`up4.Converter.vtk` must be sorted and without any sub-files generated by LIGGGHTS (any involving boundingBox in the name) and can be generated with the following code:

.. code-block:: python

    from glob import glob
    from natsort import natsorted
    files = glob('path/to/folder/*.vtk')
    files = [f for f in files if not "boundingBox" in f]
    files = natsorted(files)

conversion can then be done with:

.. code-block:: python

    import up4
    up4.Converter.vtk(
        files,                 # Sorted list of filenames
        1e-5,                  # timestep of the simulation
        'output.hdf5',         # filename to write
        r"(\d+).vtk",         # regex to extract the timestep from the filename
    )

The regex filter used in :code:`up4.Converter.vtk` is used to extract the timestep from the filename. The regex must contain a group of numbers.
Read more about regex `here <https://docs.python.org/3/howto/regex.html>`_. The default regex filter should work in most cases.

The function :code:`up4.Converter.vtk_from_folder` is a wrapper around :code:`up4.Converter.vtk` and can be used as follows:

.. code-block:: python

    import up4
    up4.Converter.vtk_from_folder(
        'path/to/folder',       # Path to the folder containing the vtk files
        1e-5,                   # timestep of the simulation
        'output.hdf5',          # filename to write
        r"(\d+).vtk",          # regex to extract the timestep from the filename
    )

Short notice on stats: Once you generated your hdf5 file you can read it in using the :code:`up4.Data` class.
If you include the class in a normal print function the output may look as following:

.. code-block:: python

    import up4
    data = up4.Data('output.hdf5')
    print(data)

    """
    Dimensions of the system:
         x -0.07-->0.06
         y 0.00-->0.13
         z -0.09-->0.01
    The max time of this set is : 2.00
    Number of Particles: 1
    Mean velocity of: 0.44 m/s
    Minimum velocity 0.03 m/s
    Maximum Velocity 0.74 m/s
    """

